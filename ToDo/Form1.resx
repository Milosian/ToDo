<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAALEAAACxAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzaFOLsuhTZ7Lok3gy6JN+MuiTf/Lok3/y6JN/8ui
        Tf/Lok3/y6JN/8uiTf/Lok3/y6JN+MyiTd/LokydzKRPLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADHok1gxqNO+sajTv/Go07/xqNO/8ajTv/Go07/xqNO/8ajTv/Go07/xqNO/8ajTv/Go07/xqNO/8aj
        Tv/Go07/xqNO+sekTl8AAAAAAAAAAAAAAAAAAAAAAAAAAMOjUS/BpE/6waRP/8GkT//BpE//waRP/8Gk
        T//BpE//waRP/8GkT//BpE//waRP/8GkT//BpE//waRP/8GkT//BpE//waRP/8GkT/rBpE8tAAAAAAAA
        AAAAAAAAAAAAAL6mUaC9pVH/vaVR/72lUf+9pVH/vaVR/72lUf+9pVH/vaVR/72lUf+9pVH/vaVR/72l
        Uf+9pVH/vaVR/72lUf+9pVH/vaVR/72lUf+9pVGeAAAAAAAAAAAAAAAAAAAAALimUuC4plL/uKZS/7im
        Uv+4plLpuKZSybimUv+4plL/uKZS/7imUv+4plL/uKZS/7imUv+4plL/uKZS/7imUv+4plL/uKZS/7im
        Uv+4p1LeAAAAAAAAAAAAAAAAAAAAALOmU/mzplP/s6ZT/7OmU+yyolUhgICAArSnU5+zplP/s6ZT/7Om
        U920pVNptKVTZrSlU2a0pVNmtKVTZrOnU26zplPts6ZT/7OmU/+zplP4AAAAAAAAAAAAAAAAAAAAAK6n
        Vf+up1X/rqdV/66nVdquplU5ralWPoCAgAKtp1WfrqdV/66nVcKuqFcmraVTIq2lUyKtpVMiraVTIqym
        Uyutp1XbrqdV/66nVf+up1X/AAAAAAAAAAAAAAAAAAAAAKqoVv+qqFb/qqhW/6qoVv+qqFb/qqhW96qm
        VUiAgIACqqlW6aqoVv+qqFb/qqhW/6qoVv+qqFb/qqhW/6qoVv+qqFb/qqhW/6qoVv+qqFb/AAAAAAAA
        AAAAAAAAAAAAAKWpV/+lqVf/palX/6WpV/+lqVf/palX/6WpV/ilqVa6palX/6WpV/+lqVf/palX/6Wp
        V/+lqVf/palX/6WpV/+lqVf/palX/6WpV/+lqVf/AAAAAAAAAAAAAAAAAAAAAKCqWf+gqln/oKpZ/6Cq
        Wf+gqln/oKpZ/6CqWf+gqln/oKpZ/6CqWf+gqln/oKpZ/6CqWf+gqln/oKpZ/6CqWf+gqln/oKpZ/6Cq
        Wf+gqln/AAAAAAAAAAAAAAAAAAAAAJyqWv+cqlr/nKpa/5yqWv+cqlr/nKpa/5yqWv+cqlr/nKpa/5yq
        Wv+cqlr/nKpa/5yqWv+cqlr/nKpa/5yqWv+cqlr/nKpa/5yqWv+cqlr/AAAAAAAAAAAAAAAAAAAAAJer
        XP+Xq1z/l6tc/5erXP+Xq1zpl6tdyZerXP+Xq1z/l6tc/5erXP+Xq1z/l6tc/5erXP+Xq1z/l6tc/5er
        XP+Xq1z/l6tc/5erXP+Xq1z/AAAAAAAAAAAAAAAAAAAAAJKsXf+SrF3/kqxd/5KsXeyTql0hgICAApKs
        XZ+SrF3/kqxd/5OsXd2SrFxpka1dZpGtXWaRrV1mka1dZpKsXW6SrF3tkqxd/5KsXf+SrF3/AAAAAAAA
        AAAAAAAAAAAAAI6tXv+OrV7/jq1e/46tXtqPrl45kK1fPoCAgAKPrV+fjq1e/46uX8KNrl4mj61iIo+t
        YiKPrWIij61iIo6sXyuOrV7bjq1e/46tXv+OrV7/AAAAAAAAAAAAAAAAAAAAAImuYPmJrmD/ia5g/4mu
        YP+JrmD/ia5g94quYEiAgIACia5g6YmuYP+JrmD/ia5g/4muYP+JrmD/ia5g/4muYP+JrmD/ia5g/4mu
        YP+JrmD4AAAAAAAAAAAAAAAAAAAAAISuYeCErmH/hK5h/4SuYf+ErmH/hK5h/4SuYfiErmG6hK5h/4Su
        Yf+ErmH/hK5h/4SuYf+ErmH/hK5h/4SuYf+ErmH/hK5h/4SuYf+ErWDeAAAAAAAAAAAAAAAAAAAAAH+u
        YqF/r2L/f69i/3+vYv9/r2L/f69i/3+vYv9/r2L/f69i/3+vYv9/r2L/f69i/3+vYv9/r2L/f69i/3+v
        Yv9/r2L/f69i/3+vYv9/r2KfAAAAAAAAAAAAAAAAAAAAAHqvZTB7sGT7e7Bk/3uwZP97sGT/e7Bk/3uw
        ZP97sGT/e7Bk/3uwZP97sGT/e7Bk/3uwZP97sGT/e7Bk/3uwZP97sGT/e7Bk/3uwZPp6sWQuAAAAAAAA
        AAAAAAAAAAAAAAAAAAB1sWVidrFl+3axZf92sWX/drFl/3axZf92sWX/drFl/3axZf92sWX/drFl/3ax
        Zf92sWX/drFl/3axZf92sWX/drFl+nWyZWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcLVlMHGz
        ZqBxsmbhcbJm+XGyZv9xsmb/cbJm/3GyZv9xsmb/cbJm/3GyZv9xsmb/cbJm+XGyZuFxs2agcrNnLwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////APAADwDgAAcAwAADAMAAAwDAAAMAwAADAMAA
        AwDAAAMAwAADAMAAAwDAAAMAwAADAMAAAwDAAAMAwAADAMAAAwDAAAMAwAADAOAABwDwAA8A////AP//
        /wA=
</value>
  </data>
</root>